version: '3.8'

services:
  falcon-iq-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      # MongoDB configuration - using Docker service
      MONGO_HOST: mongodb
      MONGO_USERNAME: falcon_user
      MONGO_PASSWORD: falcon_password
      # Override JVM settings for local development
      CATALINA_OPTS: >-
        -Dfile.encoding=UTF-8
        -XX:+UseG1GC
        -Xms256m
        -Xmx512m
        -Djava.security.egd=file:/dev/./urandom
        -Dspring.profiles.active=docker
    depends_on:
      - mongodb
    networks:
      - falcon-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin_password
      MONGO_INITDB_DATABASE: falcon_iq
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - falcon-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongodb_data:
    driver: local

networks:
  falcon-network:
    driver: bridge